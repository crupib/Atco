' *************************************************************************************
'                    Code Generated by EZGUI Professional Visual Designer 5.0
'           Portions: Copyright Christopher R. Boss, 2003 to 2011 All Rights Reserved !
'              Registered EZGUI 5.0 users may use generated code Royalty Free !
' *************************************************************************************
'
' -----------------------------------------------------------------------------------------
'            WARNING !    Do Not Modify any code WITHIN Protected Sections !
' You can add code (Sub,Function,etc.) BEFORE any Protected Routine by using the following 
' CODE TAGS:        '<<SAVE>>      '<<END>>            and the Designer will not remove it.
' -----------------------------------------------------------------------------------------
'

' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================


'
#COMPILE EXE
#DIM ALL        '   This is helpful to prevent errors in coding
' --------------------
#INCLUDE "C:\ezgui50pro\includes\ezgui50.inc"                          ' EZGUI Include file for Declares
' --------------------
' *************************************************************************************


' *************************************************************************************
'                   Code Generator Defined Constants and Declares
' *************************************************************************************
DECLARE FUNCTION Main_Initialize(BYVAL VerNum&) AS LONG
DECLARE SUB OtherForm_Events(FormName$, CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB OtherForm_Design(FormName$)
DECLARE FUNCTION PreProcess_Events(FormName$, CID&, CMsg&, CVal&, Cancel&) AS LONG
DECLARE SUB EZ_NEWFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_NEWFORM_Design()
DECLARE SUB EZ_NEWFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB NEWFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------


' ----------------------------------------------------------
%NEWFORM_FILEITEM                               = 9000
' ----------------------------------------------------------
%NEWFORM_LOADITEM                               = 9005
%NEWFORM_OPENITEM                               = 9010

' ----------------------------------------------------------
%NEWFORM_SCANNERITEM                            = 9100
' ----------------------------------------------------------
%NEWFORM_SETUPITEM                              = 9105
%NEWFORM_AUTOSITEM                              = 9110
%NEWFORM_AJOGITEM                               = 9115
%NEWFORM_MJOGITEM                               = 9120
%NEWFORM_JOYITEM                                = 9125
%NEWFORM_XSPDCITEM                              = 9130

' ----------------------------------------------------------
%NEWFORM_ANALITEM                               = 9200
' ----------------------------------------------------------
%NEWFORM_BSCANITEM                              = 9205
%NEWFORM_CSCANITEM                              = 9210
%NEWFORM_ASCANITEM                              = 9215

' ----------------------------------------------------------
%NEWFORM_3DVIEWITEM                             = 9300
' ----------------------------------------------------------

DECLARE SUB EZ_AJOGFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_AJOGFORM_Design()
DECLARE SUB EZ_AJOGFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AJOGFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

%AJOGFORM_XPOSLAB1           = 100
%AJOGFORM_XPOSUPD1           = 105
%AJOGFORM_STOPBTN1           = 110
%AJOGFORM_TEXT1              = 115
%AJOGFORM_YPOSLAB1           = 120
%AJOGFORM_APOSLAB1           = 125
%AJOGFORM_ZPOSLAB1           = 130
%AJOGFORM_YPOSUPD1           = 135
%AJOGFORM_APOSUPD1           = 140
%AJOGFORM_ZPOSUPD1           = 145

DECLARE SUB AJOGFORM_STOPBTN1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AJOGFORM_TEXT1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB EZ_AUTOSFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_AUTOSFORM_Design()
DECLARE SUB EZ_AUTOSFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

' -------------------------------
%AUTOSFORM_Timer_ID         = 3
' -------------------------------
DECLARE SUB AUTOSFORM_TimerEvents(BYVAL FormName$, BYVAL CID&, BYVAL CMsg&, CVal&, Cancel&)

%AUTOSFORM_NEXTBTN            = 100
%AUTOSFORM_BEGBTN             = 105
%AUTOSFORM_XPOSLAB1           = 110
%AUTOSFORM_YPOSLAB1           = 115
%AUTOSFORM_APOSLAB1           = 120
%AUTOSFORM_ZPOSLAB1           = 125
%AUTOSFORM_YPOSUPD1           = 130
%AUTOSFORM_XPOSUPD1           = 135
%AUTOSFORM_APOSUPD1           = 140
%AUTOSFORM_ZPOSUPD1           = 145
%AUTOSFORM_ALL0BTN            = 150
%AUTOSFORM_TEXT1              = 155

DECLARE SUB AUTOSFORM_NEXTBTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_BEGBTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_YPOSUPD1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_XPOSUPD1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_APOSUPD1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_ZPOSUPD1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_ALL0BTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB AUTOSFORM_TEXT1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB EZ_CALFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_CALFORM_Design()
DECLARE SUB EZ_CALFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB CALFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

%CALFORM_CALXBTN            = 100
%CALFORM_CALYBTN            = 105
%CALFORM_CALABTN            = 110

DECLARE SUB CALFORM_CALXBTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB CALFORM_CALYBTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB CALFORM_CALABTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB EZ_CALXFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_CALXFORM_Design()
DECLARE SUB EZ_CALXFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB CALXFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

%CALXFORM_XAXISLAB           = 100
%CALXFORM_XPOSLAB            = 105
%CALXFORM_XTEXTBOX           = 110
%CALXFORM_XPOSLAB_2          = 115

DECLARE SUB CALXFORM_XTEXTBOX_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB EZ_JOYFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_JOYFORM_Design()
DECLARE SUB EZ_JOYFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB JOYFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

' -------------------------------
%JOYFORM_Timer_ID         = 3
' -------------------------------
DECLARE SUB JOYFORM_TimerEvents(BYVAL FormName$, BYVAL CID&, BYVAL CMsg&, CVal&, Cancel&)

%JOYFORM_XPOSLAB            = 100
%JOYFORM_YPOSLAB1           = 105
%JOYFORM_APOSLAB1           = 110
%JOYFORM_ZPOSLAB1           = 115
%JOYFORM_YPOSUPD            = 120
%JOYFORM_XPOSUPD            = 125
%JOYFORM_APOSUPD            = 130
%JOYFORM_ZPOSUPD            = 135
%JOYFORM_STOPBTN            = 140

DECLARE SUB JOYFORM_STOPBTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB EZ_MJOGFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_MJOGFORM_Design()
DECLARE SUB EZ_MJOGFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB MJOGFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

%MJOGFORM_XPOSLAB1           = 100
%MJOGFORM_YPOSLAB1           = 105
%MJOGFORM_APOSLAB1           = 110
%MJOGFORM_ZPOSLAB1           = 115
%MJOGFORM_YPOSUPD1           = 120
%MJOGFORM_XPOSUPD1           = 125
%MJOGFORM_APOSUPD1           = 130
%MJOGFORM_ZPOSUPD1           = 135
%MJOGFORM_STOPBTN1           = 140
%MJOGFORM_TEXT1              = 145

DECLARE SUB MJOGFORM_STOPBTN1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB MJOGFORM_TEXT1_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB EZ_SETUPFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_SETUPFORM_Design()
DECLARE SUB EZ_SETUPFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

' -------------------------------
%SETUPFORM_Thread1_ID            =1
' -------------------------------
DECLARE SUB SETUPFORM_Thread1Events(BYVAL FormName$, BYVAL CID&, BYVAL CMsg&, CVal&, Cancel&)
' -------------------------------
%SETUPFORM_XSTART             = 100
%SETUPFORM_LABELXSTART        = 105
%SETUPFORM_LABELXEND          = 110
%SETUPFORM_LABELYSTART        = 115
%SETUPFORM_LABELYEND          = 120
%SETUPFORM_LABELXINDEX        = 125
%SETUPFORM_LABELYINDEX        = 130
%SETUPFORM_LABELXSPEED        = 135
%SETUPFORM_LABELYSPEED        = 140
%SETUPFORM_LABELXPOS          = 145
%SETUPFORM_LABELYPOS          = 150
%SETUPFORM_LABELXCTIN         = 155
%SETUPFORM_LABELYCTIN         = 160
%SETUPFORM_LABELXPLUSMIN      = 165
%SETUPFORM_LABELYPLUSMIN      = 170
%SETUPFORM_LABELIDXHL         = 175
%SETUPFORM_LABELXONOFF        = 180
%SETUPFORM_LABELYONOFF        = 185
%SETUPFORM_LABELAUTOHD        = 190
%SETUPFORM_LABELDUALRAS       = 195
%SETUPFORM_LABELOVERLAP       = 200
%SETUPFORM_LABELAPOS          = 205
%SETUPFORM_LABELACTIN         = 210
%SETUPFORM_XEND               = 215
%SETUPFORM_YSTART             = 220
%SETUPFORM_YEND               = 225
%SETUPFORM_XINDEX             = 230
%SETUPFORM_YINDEX             = 235
%SETUPFORM_XSPEED             = 240
%SETUPFORM_YSPEED             = 245
%SETUPFORM_XPOS               = 250
%SETUPFORM_YPOS               = 255
%SETUPFORM_XCTIN              = 260
%SETUPFORM_YCTIN              = 265
%SETUPFORM_XPLUSMIN           = 270
%SETUPFORM_YPLUSMIN           = 275
%SETUPFORM_INDEX              = 280
%SETUPFORM_IDXHL              = 285
%SETUPFORM_XONOFF             = 290
%SETUPFORM_YONOFF             = 295
%SETUPFORM_AUTOHD             = 300
%SETUPFORM_DUALRAS            = 305
%SETUPFORM_OVERLAP            = 310
%SETUPFORM_APOS               = 315
%SETUPFORM_ACTIN              = 320
%SETUPFORM_LABELINDEX         = 325
%SETUPFORM_CALBTN             = 330

DECLARE SUB SETUPFORM_XSTART_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_XEND_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YSTART_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YEND_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_XINDEX_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YINDEX_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_XSPEED_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YSPEED_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_XPOS_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YPOS_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_XCTIN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YCTIN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_XPLUSMIN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YPLUSMIN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_INDEX_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_IDXHL_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_XONOFF_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_YONOFF_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_AUTOHD_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_DUALRAS_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_OVERLAP_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_APOS_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_ACTIN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SETUPFORM_CALBTN_Events(MyID&, CMsg&, CVal&, Cancel&)
DECLARE SUB EZ_SPLASHFORM_Display(BYVAL FParent$)
DECLARE SUB EZ_SPLASHFORM_Design()
DECLARE SUB EZ_SPLASHFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)
DECLARE SUB SPLASHFORM_Events(CID&, CMsg&, CVal&, Cancel&)
' ------------------------------------------------

%SPLASHFORM_PICTURE1           = 100




' *************************************************************************************
'                 Code Generator Defined Global Variables and Types
' *************************************************************************************



'    Note:     Do NOT change the names of the EZGUI Callback Procedures !

' --------------------
#INCLUDE "C:\ezgui50pro\includes\ezwmain50.inc"                          ' EZGUI Include file for WinMain
' --------------------



' *************************************************************************************
'                       User Defined Global Variables and Types
'         (Put code in CODE TAGS! to protect from deletion by Code Generator !)
' *************************************************************************************


'<<SAVE>>
'#CONSOLE OFF
'<<END>>


'<<SAVE>>'

MACRO CONST = MACRO
'misc const values
    CONST TRUE = -1
    CONST FALSE = 0

'Key codes
    CONST KeyUP = 72
    CONST KeyDN = 80
    CONST KeyLft = 75
    CONST KeyRgt = 77
    CONST KeyBKSPC = 8
    CONST KeySPC = 32
    CONST KeyEnter = 13
    CONST KeyEsc = 27

'Serial Input-Output (SIO) error mode difinitions
    CONST DoNothing = &H0
    CONST ErrorBox = &H1
    CONST AbortCom = &H2
    CONST ExitProgram = &H3


'***************************************************************************
'****************  SERVO NMC specific definitions  *************************
'***************************************************************************

    CONST AllServos = &HFF ' group command address
    CONST LastServo = &H4 ' last Pic servo address location

'Module type definitions
    CONST PicServoID = &H0
    CONST PicIoID =    &H2
    CONST ArmIoID =    &H5

'Module addresses, in order, as setup in current system network, change as needed.
    CONST PicServo1 = 1  'Pic servo module address #1; setup for X1 Axis
    CONST PicServo2 = 2  'Pic servo module address #2; setup for X2 Axis (Z Axis for LMT 3D scanner) 5/30/15
    CONST PicServo3 = 3  'Pic servo module address #3; setup for Y Axis
    CONST PicServo4 = 4  'Pic servo module address #4; setup for AUX use, no motor attached
    CONST PicIo  =    5  'Pic IO module address    #5; setup for AUX IO
    CONST ArmIo  =    6  'Arm IO module address    #6; custom module for 3D to 2D translation


'PIC SERVO  Status byte bit codes
    CONST MoveDone =   &H1
    CONST CksumErr =   &H2
    CONST OverCurrent= &H4
    CONST PowerOn =    &H8
    CONST PosError =   &H10
    CONST Limit1 =     &H20
    CONST Limit2 =     &H40
    CONST HomeInProg = &H80

'PIC SERVO Auxiliary status byte bit codes
    CONST IndexPulse =  &H1
    CONST PositionWrap= &H2
    CONST ServoOn =     &H4
    CONST AccelDone =   &H8
    CONST Slew =        &H10
    CONST ServoOverrun= &H20
    CONST PathMode =    &H40
    'bit 7 not used

'PIC IO Status byte bit codes
    ' bit 0 not used
'   CONST CksumErr =  &H2  Common all modules
    '2-7 not used

'ARM IO Status byte bit codes
    CONST PathOverFlow =  &H1
'   CONST CksumErr =   &H2   Common all modules
    'bit 2-5 not used, clear to 0
    CONST EncMotionError= &H40
    CONST MtrFltOrEstop = &H80


'MiscMode bit definitions
    CONST AmpEnabled =      &H1
    CONST PWMSelected =     &H2
    CONST VelSelected =     &H4
    CONST PosSelected =     &H8
    CONST OnL1Selected =    &H10
    CONST OnL2Selected =    &H20
    CONST OnIndexSelected = &H40
    CONST OnPeSelected =    &H80
    CONST OnCeSelected =    &H100
    CONST HomeFlagMask =    &HFE0F

    CONST PosDir = 1
    CONST NegDir = 0



'*****************************************************************************
'                             COMMAND CODES
'*****************************************************************************

'CMD 0x00 PIC SERVO
'Reset Position: Bit definitions
    CONST SetPosCtrRel= &H1
    CONST SetPosCtr =   &H2
    'bits 2-7: unused, clear to 0

'CMD 0x00 PIC IO
'Set Direction: Bit definitions
    'data byte 1
    CONST DirBit0 = &H1  '0 = output, 1 = input
    CONST DirBit1 = &H2
    CONST DirBit2 = &H4
    CONST DirBit3 = &H8
    CONST DirBit4 = &H10
    CONST DirBit5 = &H20
    CONST DirBit6 = &H40
    CONST DirBit7 = &H80
    'data byte 2
    CONST DirBit9 = &H1
    CONST DirBit10= &H2
    CONST DirBit11= &H4
    CONST DirBit12= &H8
    'bits 4-7: Don't care

'CMD 0x00 ARM IO
'Set Encoders: Bit definitions
    CONST SetEncM1 = &H1
    CONST SetEncM2 = &H2
    CONST SetEncM3 = &H4
    CONST SetStpM1 = &H8
    CONST SetStpM2 = &H10
    CONST SetStpM3 = &H20
    CONST SetImgM1 = &H40
    CONST SetImgM2 = &H80

'CMD 0x01
'Common all modules Set Address: Bits N/A

'CMD 0x02 & 0x03 PIC SERVO
'Define Status: Bit definitions
    CONST SendPos =      &H1
    CONST SendAD =       &H2
    CONST SendVel =      &H4
    CONST SendAux =      &H8
    CONST SendHome =     &H10
    CONST SendID =       &H20    'Common MC definition
    CONST SendPosErr =   &H40
    CONST SendPathLeft = &H80    'Common MC definition

'CMD 0x02 & 0x03 PIC IO
'Define Status: Bit definitions
    CONST SendIO =      &H1
    CONST SendAD1 =     &H2
    CONST SendAD2 =     &H4
    CONST SendAD3 =     &H8
    CONST SendCtr =     &H10
'   CONST SendID =      &H20   'common all NMC modules
    CONST SendSyncIO =  &H40
    CONST SendSyncCtr = &H80

'CMD 0x02 & 0x03 ARM IO
'Define Status: Bit definitions
    CONST SendEnc123 =      &H1  'Send Encoder Counter 1,2 & 3
    CONST SendStp123 =      &H2  'Send Step Counter 1,2 & 3
    CONST SendImg12  =      &H4  'Send Img Step Counter 1 & 2
'   CONST Unused =          &H8
'   CONST Unused =          &H10
'   CONST SendID =          &H20 'Common MC definition
    CONST SendFaultStop =   &H40 '**** see below
'   CONST SendPathLeft =    &H80 'Common with PIC-Servo

   'Byte return bit definitions for SendFaultStop
    CONST Servo1Fault = &H1
    CONST Servo2Fault = &H2
    CONST Servo3Fault = &H4
    CONST EStopFault =  &H8
'   CONST Unused =      &H10
'   CONST Unused =      &H20
'   CONST Unused =      &H40
'   CONST Unused =      &H80

'CMD 0x04 PIC SERVO
'Load Trajectory: Bit definitions
    CONST LoadPos = &H1
    CONST LoadVel = &H2
    CONST LoadAcc = &H4
    CONST LoadPWM = &H8
    CONST PosMode = &H10
    CONST VelMode = &H20
    CONST RevDir =  &H40
    CONST StartNow= &H80

'CMD 0x04
'PIC IO Set PWM: Bits N/A
'ARM IO Not Used

'CMD 0x05
'PIC SERVO Start Motion: Bits N/A
'PIC IO Synch Output: Bits N/A
'ARM IO Start Motion: Bits N/A

'CMD 0x06 PIC SERVO Set Gain: Bits N/A

'CMD 0x06 PIC IO
'Set Output: Bit Definitions
   'data byte 1
    CONST OutBit0 = &H1  '1 = on, 0 = off
    CONST OutBit1 = &H2
    CONST OutBit2 = &H4
    CONST OutBit3 = &H8
    CONST OutBit4 = &H10
    CONST OutBit5 = &H20
    CONST OutBit6 = &H40
    CONST OutBit7 = &H80
    'data byte 2
    CONST OutBit9 = &H1
    CONST OutBit10= &H2
    CONST OutBit11= &H4
    CONST OutBit12= &H8
    'bits 4-7: Don't care

'CMD 0x06 ARM IO Not Used

'CMD 0x07 PIC SERVO
'Stop Motor: Bit Definitions
    CONST EnableAmp =  &H1
    CONST MotorOff =   &H2
    CONST StopAbrupt = &H4
    CONST StopSmooth = &H8
    CONST StopHere =   &H10
    'bits 5-7: Unused, clear to 0

'CMD 0x07 PIC IO
'Set Synch Output: Bit Definitions
    'See Set Output CMD 0x06

'CMD 0x07 ARM IO
'Stop Motion: Bit Definitions
    CONST ImgCtsOff =     &H1
    CONST ResetPath =     &H2
    CONST StopOutAbrupt = &H4
    CONST StopOutSmooth = &H8
    CONST DisableM1 =     &H10
    CONST DisableM2 =     &H20
    CONST DisableM3 =     &H40
    CONST DiableImg =     &H80

'CMD 0x08 PIC SERVO
'I/O Control: Bit Definitions
    'bits 0,1: Not used, clear to 0
    CONST LmtMtrOff =   &H4
    CONST LmtMtrStop =  &H8
    CONST Phase3ON =    &H10
    CONST AntiPhaseON = &H20
    CONST FastPathON =  &H40
    CONST StepDirON =   &H80

'CMD 0x08 PIC IO
'Set Timer Mode: Bit Definitions
    CONST CtrTmrON =   &H1
    CONST CtrModeON =  &H2
    'bits 2,3: Not used, don't care
    'combined bits 5,4
    CONST PreScaleX2 = &H10
    CONST PreScaleX4 = &H20
    CONST PreScaleX8 = &H30
    'bits 6,7: Not used, don't care

'CMD 0x08 ARM IO
'Set Encoder Error Level: Bit Definitions
    CONST SetErrorCtsEnc1 =   &H1
    CONST SetErrorCtsEnc2 =   &H2
    CONST SetErrorCtsEnc3 =   &H4
    CONST SetSmoothInterval = &H8
    'bits 4-7: Not used, don't care

'CMD 0x09 PIC SERVO
'Set Homing: Bit Definitions
    CONST HomeOnLimit1 = &H1
    CONST HomeOnLimit2 = &H2
    CONST OnHomeMtrOff = &H4
    CONST HomeOnIndex =  &H8
    CONST OnHomeStop =   &H10
    CONST OnHomeSmooth = &H10
    CONST HomeOnPosErr = &H40
    CONST HomeOnAmpLmt = &H80

'CMD 0x09
'PIC IO Not Used
'ARM IO Not Used

'CMD 0x0A Common all modules
'Set Baud: Bit Definitions
    CONST Baud230 = &H5
    CONST Baud115 = &HA
    CONST Baud57 =  &H15
    CONST Baud19 =  &H40
    CONST Baud9 =   &H7F

'CMD 0x0B
'PIC SERVO Clear Bits: Bit N/A
'PIC IO Not Used
'ARM IO  Clear Latched Status Bits: Bit N/A


'CMD 0x0C PIC SERVO Save As Home: Bit N/A
'CMD 0x0C PIC IO  Synch Input: Bit N/A

'CMD 0x0C ARM IO
'Send Step Counts to Image and Servo: Bit Definitions
    CONST StepsOutMtr1 = &H1
    CONST StepsOutMtr2 = &H2
    CONST StepsOutMtr3 = &H4
    CONST StepsOutImg1 = &H8
    CONST StepsOutImg2 = &H10
    'bits 5-7: Not used, don't care

'CMD 0x0D
'PIC SERVO Add Path Points: Bit N/A
'PIC IO Not Used
'ARM IO Add Path Points: Bit N/A

'CMD 0x0E
'Common all modules No Op: Bits N/A

'CMD 0x0F
'Common all modules Reset: Bits N/A


'CMD 3: Read Status : Status definition bits
'Same as CMD 2

'CMD 4: Unused

    CONST PWMMode = 0 'PWM added KJL




'*********************************************************************************
'                                GLOBAL VARIBLES
'*********************************************************************************

'File IO
    GLOBAL filenum AS INTEGER
    GLOBAL HdrVer AS STRING * 20

'Keypad Table
    GLOBAL KeyTable() AS STRING

'COM Port
    GLOBAL McuPortNum AS LONG    ' GLOBAL McuPortNum AS LONG comm port file#
    GLOBAL McuPortName AS STRING
    GLOBAL McuPortBaud AS LONG
    GLOBAL RecvSize AS LONG
    GLOBAL XmitSize AS LONG
    GLOBAL MemSize AS LONG

'Joystick to pwm conversion table
    GLOBAL LF() AS BYTE
    GLOBAL LU() AS BYTE
    GLOBAL Corr1() AS BYTE
    GLOBAL Corr2() AS BYTE

'Motors Vel & Accel pot tables
    GLOBAL XVel() AS LONG
    GLOBAL YVel() AS LONG
    GLOBAL XAcel() AS LONG
    GLOBAL YAcel() AS LONG

'Motors Speed Control tables
    GLOBAL XSpd()  AS LONG
    GLOBAL YSpd()  AS LONG

'   GLOBAL controlbyte AS BYTE
'   GLOBAL ExitSub AS INTEGER

'****************************************************************************************************
TYPE GloRecord

    NumModules AS INTEGER

    ModuleType(1 TO 32) AS INTEGER
    ModuleVer(1 TO 32) AS INTEGER

    StatusDef(1 TO 32) AS INTEGER        'user-defined status definition
    StatusRetBytes(1 TO 32) AS INTEGER   'number of user defined status bytes returned
    StatusByte(1 TO 32) AS INTEGER       'status byte
    StatusAux(1 TO 32) AS INTEGER        'Status Auxilary

    Position(1 TO 32) AS LONG
    CmdPosition(1 TO 32) AS LONG
    HomePosition(1 TO 32) AS LONG

    velocity(1 TO 32) AS LONG
    CmdVelocity(1 TO 32) AS LONG
    CmdAccel(1 TO 32) AS LONG
    CmdPwm(1 TO 32) AS INTEGER
    AdVal(1 TO 32) AS INTEGER


    Kp(1 TO 32) AS INTEGER         'PID
    Ki(1 TO 32) AS INTEGER
    Kd(1 TO 32) AS INTEGER
    IL(1 TO 32) AS INTEGER
    OL(1 TO 32) AS INTEGER
    CL(1 TO 32) AS INTEGER
    EL(1 TO 32) AS INTEGER
    SRD(1 TO 32) AS LONG
    DBND(1 TO 32) AS INTEGER
    SM(1 TO 32) AS INTEGER

    MiscMode(1 TO 32) AS LONG

    PathsLeft(1 TO 32) AS INTEGER        'added 6/2/15 common to PIC-SERVO and ARM-IO
    EncPosError(1 TO 32) AS INTEGER      'added 6/2/15 PIC-SERVO

    SIOErrorMode AS LONG
    SIOError AS LONG
    CkSumError AS LONG
    SIOPort AS LONG
    AmpQuery AS LONG
    PowerQuery AS LONG
    baud AS LONG

    'added for PIC-IO
    IO1 AS INTEGER
    IO2 AS INTEGER
    Ad1 AS INTEGER
    Ad2 AS INTEGER
    Ad3 AS INTEGER
    Counter AS LONG
    SyncIO1 AS INTEGER
    SyncIO2 AS INTEGER
    SyncCounter AS INTEGER

    'added for ARM-IO
    Position1 AS LONG        'added 6/2/15
    Position2 AS LONG        'added 6/2/15
    Position3 AS LONG        'added 6/2/15
    StepCount1 AS LONG       'added 6/2/15
    StepCount2 AS LONG       'added 6/2/15
    StepCount3 AS LONG       'added 6/2/15
    ImgCount1 AS LONG        'added 6/2/15
    ImgCount2 AS LONG        'added 6/2/15
    ServoFault AS INTEGER    'added 6/2/15

END TYPE
GLOBAL Glo AS GloRecord


'Installed Hardware: Specific to this particular motor controller
TYPE HardwareInstalled

    SystemModules AS INTEGER             'REQUIRED: Total Number of modules in this system
    SystemModuleType(1 TO 32) AS INTEGER 'REQUIRED: Type of module, each
    SystemModuleVer(1 TO 32) AS INTEGER  'Optional: Version number of individual module, each
    SystemName AS STRING * 20            'Optional: Name of Motor Controller Unit (MCU)
    SystemSN AS STRING * 20              'Optional: Serial Number of MCU
    SystemDate AS STRING * 6             'Optional: Date of manufacture
    SystemVersion AS STRING * 20         'Optional: MCU Version

END TYPE
GLOBAL Hardware AS HardwareInstalled



TYPE ScanParms

    YCtr        AS SINGLE       'YCts/inch
    XCtr        AS SINGLE       'XCts/inch
    ZCtr        AS SINGLE       'ZCts/Degree  '*********************************added 6/1/15
    ACtr        AS SINGLE       'Aux Enc Cts/inch
    YCal        AS SINGLE       'Y Cal Inch distance
    XCal        AS SINGLE       'X Cal Inch distance
    ZCal        AS SINGLE       'Z Cal Degree distance  '***********************added 6/1/15
    ACal        AS SINGLE       'Aux Cal Inch distance
    XOffset     AS SINGLE       'X inch pos when counter zeroed
    YOffset     AS SINGLE       'Y inch pos when counter zeroed
    ZOffset     AS SINGLE       'Z degree pos when counter zeroed '***************added 6/1/15
    AOffset     AS SINGLE       'A Inch pos when counter zeroed
    XPos        AS SINGLE       'current X inch position
    YPos        AS SINGLE       'current Y inch position
    ZPos        AS SINGLE       'current Z inch position '**********************added 6/1/15
    APos        AS SINGLE       'current A inch position
    XPlus       AS INTEGER      'X scan +/-
    YPlus       AS INTEGER      'Y scan +/-
    ZPlus       AS INTEGER      'Z scan +/- '***********************************added 6/1/15
    XDataStart  AS LONG         'x array position for scan start
    YDataStart  AS LONG         'y array position for scan start
    ZDataStart  AS LONG         'Z array position for scan start '**************added 6/1/15
    XDataEnd    AS LONG         'x array position for scan end
    YDataEnd    AS LONG         'y array position for scan end
    ZDataEnd    AS LONG         'z array position for scan end   '**************added 6/1/15
    XIndex      AS SINGLE       'x inch index
    YIndex      AS SINGLE       'y inch index
    ZIndex      AS SINGLE       'z inch index  '********************************added 6/1/15
    XIndexCts   AS LONG         'x actual value (+/-) counts per index
    YIndexCts   AS LONG         'y actual value (+/-) counts per index
    ZIndexCts   AS LONG         'z actual value (+/-) counts per index '********added 6/1/15
    IndexLow    AS INTEGER      'Index towards High or Low
    XCts        AS LONG         'x absolute value scan start counts
    YCts        AS LONG         'y absolute value scan start counts
    ZCts        AS LONG         'z absolute value scan start counts '***********added 6/1/15
    ACts        AS LONG         'a absolute value scan start counts
    XStartCts   AS LONG         'x actual value (+/-) scan start counts
    YStartCts   AS LONG         'y actual value (+/-) scan start counts
    ZStartCts   AS LONG         'z actual value (+/-) scan start counts '*******added 6/1/15
    XEndCts     AS LONG         'x actual value (+/-) scan end counts
    YEndCts     AS LONG         'y actual value (+/-) scan end counts
    ZEndCts     AS LONG         'z actual value (+/-) scan end counts   '*******added 6/1/15
    XLow        AS SINGLE       'x scan start inch position
    YLow        AS SINGLE       'y scan start inch position
    ZLow        AS SINGLE       'z scan start inch position '*******************added 6/1/15
    XHigh       AS SINGLE       'x scan end inch position
    YHigh       AS SINGLE       'y scan end inch position
    ZHigh       AS SINGLE       'z scan end inch position   '*******************added 6/1/15
    OverLap     AS SINGLE       'added si scan overlap
    XSpeed      AS SINGLE       'x scan speed in inches
    YSpeed      AS SINGLE       'y scan speed in inches
    ZSpeed      AS SINGLE       'z scan speed in inches     '*******************added 6/1/15
    XEnable     AS INTEGER      'flag true/false X axis on
    YEnable     AS INTEGER      'flag true/false Y axis on
    ZEnable     AS INTEGER      'flag true/false Z axis on  '*******************added 6/1/15
    XSpdDir     AS INTEGER      'flag X speed cntrl direction
    IndexY      AS INTEGER      'flag true/false index on X or Y, circ or ax scan
    StopChk     AS INTEGER      'flag true/false autoOff on/off
    DualRas     AS INTEGER        'flag true/false double raster each index
    AutoHold    AS INTEGER      'flag true/false Auto Hold
    IndexCt     AS INTEGER      'index loop counter
    IndexInc    AS INTEGER      'index loop incrementer
    ScanFlag    AS INTEGER      '
    Index       AS INTEGER      'scan direction
    NextFlag    AS INTEGER      'added for si auto scan increment
    YCtrStr     AS STRING * 10
    XCtrStr     AS STRING * 10
    ZCtrStr     AS STRING * 10                                    '*******************added 6/1/15
    ACtrStr     AS STRING * 10
    YCalStr     AS STRING * 10  'Y Cal Inch distance
    XCalStr     AS STRING * 10  'X Cal Inch distance
    ZCalStr     AS STRING * 10  'Z Cal Inch distance          '*******************added 6/1/15
    ACalStr     AS STRING * 10  'A Cal Inch distance
    XPosStr     AS STRING * 10
    YPosStr     AS STRING * 10
    ZPosStr     AS STRING * 10                                    '*******************added 6/1/15
    APosStr     AS STRING * 10
    XPlusSTR    AS STRING * 10
    YPlusSTR    AS STRING * 10
    ZPlusSTR    AS STRING * 10                                   '*******************added 6/1/15
    XIndexSTR   AS STRING * 10
    YIndexSTR   AS STRING * 10
    ZIndexSTR   AS STRING * 10                                  '*******************added 6/1/15
    IndexLowStr AS STRING * 10
    XLowStr     AS STRING * 10
    YLowStr     AS STRING * 10
    ZLowStr     AS STRING * 10                                    '*******************added 6/1/15
    XHighStr    AS STRING * 10
    YHighStr    AS STRING * 10
    ZHighStr    AS STRING * 10                                   '*******************added 6/1/15
    OverLapStr  AS STRING * 10
    XSpeedSTR   AS STRING * 10
    YSpeedSTR   AS STRING * 10
    ZSpeedSTR   AS STRING * 10                                  '*******************added 6/1/15
    XEnableSTR  AS STRING * 10
    YEnableSTR  AS STRING * 10
    ZEnableSTR  AS STRING * 10                                 '*******************added 6/1/15
    XSpdDirSTR  AS STRING * 10
    IndexYSTR   AS STRING * 10
    StopChkSTR  AS STRING * 10
    DualRasSTR  AS STRING * 10
    NextFlagSTR AS STRING * 10
    AutoHoldSTR AS STRING * 10

END TYPE
GLOBAL SCANstruc AS scanparms



'********************************************************************************************************
'AtcoSer.inc
'***'****************************************************************************************************
' RS232 Port Control
DECLARE FUNCTION OpenComPort AS INTEGER
DECLARE SUB CloseCommPort(ComPortNum AS LONG ,ecode AS INTEGER)
DECLARE SUB FlushBuffers (ComPortNum AS LONG, WhichBuffer AS INTEGER, ECode AS INTEGER)
DECLARE SUB ReadFromComm (ComPortNum AS LONG, ReadBuffer AS STRING, BytesRead AS INTEGER, ECode AS INTEGER)
DECLARE SUB WriteToComm (ComPortNum AS LONG, WriteBuffer AS STRING, BytesWritten AS INTEGER, ECode AS INTEGER)
DECLARE SUB DeleteCommBuffers (ECode AS INTEGER)

'Serial Communication routines
DECLARE SUB BytesInQue (ComPortNum AS LONG, RecvQue AS INTEGER, XmitQue AS INTEGER, ECode AS INTEGER)
DECLARE FUNCTION InitNetWork AS INTEGER
DECLARE SUB ProcessCMD (address AS WORD, CmdString AS STRING)
DECLARE FUNCTION SIOGetByte (Character AS INTEGER, TimeOutPeriod AS INTEGER) AS INTEGER
DECLARE SUB FixSIOerror
DECLARE SUB GetStatus (Num AS INTEGER)

'new sub - specific to ARM IO
DECLARE SUB ProcessCMD (address AS WORD, CmdString AS STRING)


'Misc
'****************************************************************************************************
DECLARE SUB DelayX (Millisec AS INTEGER) '
DECLARE FUNCTION DelayFact&
DECLARE FUNCTION GetTick&

DECLARE FUNCTION BytesToLong (BYVAL A AS INTEGER, BYVAL B AS INTEGER, BYVAL C AS INTEGER, BYVAL D AS INTEGER)AS LONG
DECLARE FUNCTION LongToStr (x AS LONG) AS STRING
DECLARE FUNCTION IntToStr (x AS INTEGER) AS STRING
DECLARE FUNCTION BytesToInt (BYVAL A AS INTEGER, BYVAL B AS INTEGER) AS INTEGER

DECLARE FUNCTION QStr(BYVAL Amount AS SINGLE, BYVAL Places AS INTEGER) AS STRING

DECLARE FUNCTION GoodLNG (Num AS STRING) AS INTEGER
DECLARE FUNCTION GoodSNG (Num AS STRING) AS INTEGER


DECLARE FUNCTION KeyDown AS INTEGER


' Motor control
'************************************************************************************
DECLARE SUB SetDefaults
DECLARE SUB GetXYZAPos
DECLARE SUB SetForAuto
DECLARE SUB ResetPosition (address AS INTEGER)

DECLARE FUNCTION GetCoord (mCounts AS LONG, plus AS INTEGER) AS LONG
DECLARE SUB MoveVel (address AS INTEGER, MoveDir AS INTEGER,  velocity AS LONG, accel AS LONG)
DECLARE SUB StopMtr (address AS INTEGER, StopMode AS INTEGER)
DECLARE SUB GoMtr (address AS INTEGER)

DECLARE SUB SetHomeCap

DECLARE SUB SetAccel (address AS INTEGER)
DECLARE SUB SetGain (address AS INTEGER)
DECLARE SUB EnableAmpl (Value AS INTEGER, address AS INTEGER)
DECLARE SUB SetXCtr



'no exist, didn't pull these in, yet!
DECLARE SUB JogJoyStk
DECLARE SUB SetModePwm
DECLARE SUB SetModeVel
DECLARE SUB SetPwm (MtrNum AS INTEGER, PVal AS INTEGER)
DECLARE SUB JogAuto
DECLARE SUB JogMan
DECLARE SUB CalEncoder (YXAxis AS INTEGER)
DECLARE SUB ManXDN
DECLARE SUB ManXUP
DECLARE SUB ManYLFT
DECLARE SUB ManYRGT


'Motor Calibration File I/O
'************************************************************************************
DECLARE FUNCTION CalSave(filename AS STRING) AS INTEGER
DECLARE FUNCTION CalLoad(filename AS STRING) AS INTEGER




'IO TEST SUB
'/////////////////////////////////////////////////////////
DECLARE SUB DISPLAY(BYVAL sData AS STRING)

'<<END>>

SUB EZ_Main(VerNum&)     ' (PROTECTED)
     EZ_Reg %EZ_CUSTID,%EZ_REGNUM
     EZ_DefImageFolder "Graphics"
     EZ_AllowCommandEvents  0
     EZ_AllowKeyEvents 1
     EZ_DefFont 6, "Arial", 10, "V"
     EZ_DefFont 7, "Courier New", 10, "F"
     EZ_DefFont 8, "Times New Roman", 10, "V"
     EZ_DefFont 9, "Modern", 10, "V"
     EZ_DefSystemColor 32, 4
     EZ_DefSystemColor 33, 5
     EZ_DefSystemColor 34, 15
     EZ_DefSystemColor 35, 24
     EZ_DefColorL 36, &H00B96FFF
     EZ_DefColorL 37, &H0014AB9F
     EZ_DefColorL 38, &H0047A7FF
     EZ_DefColorL 39, &H00D2AACF
     EZ_DefColorL 40, &H001CD5E3
     EZ_DefColorL 41, &H00BC8943
     EZ_DefColorL 42, &H006C6AB7
     EZ_DefColorL 43, &H00DD4489
     IF Main_Initialize(VerNum&) THEN
          EZ_NEWFORM_Display ""
     END IF
END SUB

' -------------------------------------------------------------------------------------

SUB EZ_DesignWindow(FormName$)     ' (PROTECTED)
     SELECT CASE FormName$
          CASE "NEWFORM"
               EZ_NEWFORM_Design
          CASE "AJOGFORM"
               EZ_AJOGFORM_Design
          CASE "AUTOSFORM"
               EZ_AUTOSFORM_Design
          CASE "CALFORM"
               EZ_CALFORM_Design
          CASE "CALXFORM"
               EZ_CALXFORM_Design
          CASE "JOYFORM"
               EZ_JOYFORM_Design
          CASE "MJOGFORM"
               EZ_MJOGFORM_Design
          CASE "SETUPFORM"
               EZ_SETUPFORM_Design
          CASE "SPLASHFORM"
               EZ_SPLASHFORM_Design
          CASE ELSE
               OtherForm_Design FormName$
     END SELECT
END SUB

' -------------------------------------------------------------------------------------

SUB EZ_Events(FormName$, CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     IF PreProcess_Events(FormName$, CID&, CMsg&, CVal&, Cancel&) THEN EXIT SUB
     SELECT CASE FormName$
          CASE "NEWFORM"
               EZ_NEWFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "AJOGFORM"
               EZ_AJOGFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "AUTOSFORM"
               EZ_AUTOSFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "CALFORM"
               EZ_CALFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "CALXFORM"
               EZ_CALXFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "JOYFORM"
               EZ_JOYFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "MJOGFORM"
               EZ_MJOGFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "SETUPFORM"
               EZ_SETUPFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE "SPLASHFORM"
               EZ_SPLASHFORM_ParseEvents CID&, CMsg&, CVal&, Cancel&
          CASE ELSE
               OtherForm_Events FormName$, CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' -------------------------------------------------------------------------------------





' *************************************************************************************
'                                Applications FORM Code
' *************************************************************************************


' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================


FUNCTION Main_Initialize(BYVAL VerNum&) AS LONG
     LOCAL RV&
     RV&=1
     FUNCTION=RV&
       DIM HdrVer AS STRING * 20
    DIM ThumbDisk AS STRING * 2

    'COM PORTS
    DIM  RecvSize AS LONG
    DIM  XmitSize AS LONG
    DIM  MemSize AS LONG
    DIM  MCUport AS STRING
    DIM  MCUbaud AS LONG

    'keypad table
    DIM KeyTable(20) AS STRING

    'delay timer
    DIM  DelayCtr AS LONG
    DIM  WaitX AS INTEGER


    'joystick to pwm conversion table
    DIM  LF(0 TO 255)
    DIM  LU(0 TO 255)
    DIM  Corr1(0 TO 255) AS BYTE
    DIM  Corr2(0 TO 255) AS BYTE

    'Vel & Accel pot tables
    DIM  XVel(255) AS LONG
    DIM  YVel(255) AS LONG
    DIM  XAcel(255) AS LONG
    DIM  YAcel(255) AS LONG

    'Speed Control tables
    DIM  XSpd(0 TO 255)
    DIM  YSpd(0 TO 255)


    DIM  CalSet AS INTEGER
    DIM lResult AS LONG


    '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! IMPORTANT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    'MUST BE SET FOR EACH INSTALLED  MODULE/S:

    'Settings for installed Hardware: Specific to this particular motor controller

    'REQUIRED: Total Number of NMC modules in this system
     Hardware.SystemModules = 6

    'REQUIRED: Set to each module type, in order of address location.
    '          use pre-defined CONST above, up to 32 modules supported
     Hardware.SystemModuleType(1) = PicServoID
     Hardware.SystemModuleType(2) = PicServoID
     Hardware.SystemModuleType(3) = PicServoID
     Hardware.SystemModuleType(4) = PicServoID
     Hardware.SystemModuleType(5) = PicIoID
     Hardware.SystemModuleType(6) = ArmIoID

    'Optional:
    'Hardware.SystemModuleVer(x) = 'Version number of each individual module
    'Hardware.SystemVersion =      'MCU Version, Max 20 string characters
    'Hardware.SystemName =         'Name of Motor Controller Unit (MCU), Max 20 string characters
    'Hardware.SystemSN =           'Serial Number of MCU,  Max 20 string characters
    'Hardware.SystemDate =         'Date of manufacture,   Max 6 string characters

    '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! IMPORTANT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


    MCUport ="COM6"
    MCUbaud = 115200
    McuPortNum = FREEFILE


    DelayCtr = DelayFact
    WaitX = 1
    'joystick to pwm conversion table
    'SetTables

    'new keypad layout

    '***********************************************
    'Open & Check Com Buffers, Report & Fix errors
    '
    '  - check PIC, power on, etc..
    '***********************************************
    '    IsSplashActive = 1
    '   ShowSplashDlg(1000, "atcosplash.bmp", 1, "MCU 2015",1)
    IF NOT OpenComPort THEN
       'MSGBOX "ERROR, POWER OFF/ON",, "OpenComPorts serial connection failed."
       DO
          EXIT FUNCTION
       LOOP
    END IF





'    IF NOT InitNetWork THEN
'       lResult& = MSGBOX("SETUP ERROR", %MB_OKCANCEL OR %MB_DEFBUTTON2 OR %MB_TASKMODAL, "InitNetWork Failed.")
'        DO
'           DelayX(200)
'           IF lResult& = %IDCANCEL THEN
'               EXIT FUNCTION
'           END IF
'        LOOP UNTIL InitNetWork
'    END IF

    DIM GloErr AS INTEGER

'    CalSet = FALSE
    '    IF NOT KeyDown THEN  'do not load if user has key pressed
    '      IF CalLoad(ThumbDisk + "0.M2K") THEN
    '       CalSet = TRUE
    '     END IF
    '    END IF

    'if no cal on disk or corrupt then set defaults
'    IF NOT CalSet THEN
'       SetDefaults
'    END IF
'    Scanstruc.NextFlag = FALSE 'incase cal was saved during scan
'    SetForAuto  'set velocity, etc. & motors on
'    DelayX(200)
'    BUILDWINDOW()
'    DIALOG SHOW MODAL hDlg, CALL DlgProc
    '  UnhookWindowsHookEx ghMsgHook








'IO TEST CODE END

'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
'/////
END FUNCTION

SUB OtherForm_Design(FormName$)
     SELECT CASE FormName$
          CASE ELSE
     END SELECT
END SUB

SUB OtherForm_Events(FormName$, CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE FormName$
          CASE "{OPENDLG}", "{SAVEDLG}", "{OPENDLGX}", "{SAVEDLGX}", "{COLORDLG}", "{FONTDLG}", "{PRINTDLG}", "{PAGEDLG}", "{FINDDLG}"
          CASE "{ABORTDLG}"
          CASE "{MSGBOX}"
          CASE "{APP}"      ' Not a Form
               SELECT CASE CMsg&
                    CASE %EZ_NoTheme
                    CASE %EZ_Terminate
               END SELECT
          CASE ELSE
     END SELECT
END SUB

FUNCTION PreProcess_Events(FormName$, CID&, CMsg&, CVal&, Cancel&) AS LONG
     LOCAL RV&
     RV&=0
     FUNCTION=RV&
END FUNCTION


'<<BEGINFORM>> "NEWFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_NEWFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     LOCAL hMainMenu&
     ' Main Menu handle automatically stored by EZGUI
     hMainMenu&=EZ_DefMainMenu( %NEWFORM_FILEITEM, "&File", "")
     EZ_Color 0, 11
     EZ_AllowLoadingEvent 2
     EZ_Form "NEWFORM", FParent$, "ATCO NDT 2015", 0, 0, 79, 44, "^_CMZ"
END SUB

SUB EZ_NEWFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     LOCAL hMainMenu&, hDropMenu&, hSubMenu&
     hMainMenu&=EZ_GetMenu("NEWFORM", 0)
     EZ_AddMenuItem hMainMenu&, %NEWFORM_SCANNERITEM, 0, "&Scanner", ""
     EZ_AddMenuItem hMainMenu&, %NEWFORM_ANALITEM, 0, "&Analysis", ""
     EZ_AddMenuItem hMainMenu&, %NEWFORM_3DVIEWITEM, 0, "3D &View", ""
     hDropMenu&=EZ_DefSubMenu( %NEWFORM_LOADITEM, "&Load", "")
     EZ_SaveMenu "NEWFORM", 1, hDropMenu&
     EZ_SetSubMenu hMainMenu& , %NEWFORM_FILEITEM, hDropMenu&
     EZ_AddMenuItem hDropMenu&, %NEWFORM_OPENITEM, 0, "Open", ""
     hDropMenu&=EZ_DefSubMenu( %NEWFORM_SETUPITEM, "&Setup", "")
     EZ_SaveMenu "NEWFORM", 2, hDropMenu&
     EZ_SetSubMenu hMainMenu& , %NEWFORM_SCANNERITEM, hDropMenu&
     EZ_AddMenuItem hDropMenu&, %NEWFORM_AUTOSITEM, 0, "A&uto Scan", ""
     EZ_AddMenuItem hDropMenu&, %NEWFORM_AJOGITEM, 0, "A-&Jog", ""
     EZ_AddMenuItem hDropMenu&, %NEWFORM_MJOGITEM, 0, "&M-Jog", ""
     EZ_AddMenuItem hDropMenu&, %NEWFORM_JOYITEM, 0, "Joy Stic&k", ""
     EZ_AddMenuItem hDropMenu&, %NEWFORM_XSPDCITEM, 0, "&XSPD Ctrl", ""
     hDropMenu&=EZ_DefSubMenu( %NEWFORM_BSCANITEM, "&B-Scan", "")
     EZ_SaveMenu "NEWFORM", 3, hDropMenu&
     EZ_SetSubMenu hMainMenu& , %NEWFORM_ANALITEM, hDropMenu&
     EZ_AddMenuItem hDropMenu&, %NEWFORM_CSCANITEM, 0, "C-SCAN", ""
     EZ_AddMenuItem hDropMenu&, %NEWFORM_ASCANITEM, 0, "&A-SCAN", ""
     ' ------------------------------------------------

END SUB


' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB NEWFORM_MenuEvents(BYVAL MyID&, CMsg&, CVal&, Cancel&, BYVAL hMenu&, BYVAL MenuText$)
     SELECT CASE MyID&
          CASE %NEWFORM_FILEITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click

                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_LOADITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                        BEEP
                    CASE %EZ_Selected
                        BEEP
               END SELECT
          CASE %NEWFORM_OPENITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_SCANNERITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_SETUPITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_AUTOSITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_AJOGITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_MJOGITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_JOYITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_XSPDCITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_ANALITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_BSCANITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_CSCANITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_ASCANITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE %NEWFORM_3DVIEWITEM
               SELECT CASE CMsg&
                    CASE %EZ_Click
                    CASE %EZ_Selected
               END SELECT
          CASE ELSE
     END SELECT
END SUB


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================


SUB EZ_NEWFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               NEWFORM_Events CID&, CMsg&, CVal&, Cancel&
          CASE %NEWFORM_FILEITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 0), "&File"
          CASE %NEWFORM_LOADITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 1), "&Load"
          CASE %NEWFORM_OPENITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 1), "Open"
          CASE %NEWFORM_SCANNERITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 0), "&Scanner"
          CASE %NEWFORM_SETUPITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 2), "&Setup"
          CASE %NEWFORM_AUTOSITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 2), "A&uto Scan"
          CASE %NEWFORM_AJOGITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 2), "A-&Jog"
          CASE %NEWFORM_MJOGITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 2), "&M-Jog"
          CASE %NEWFORM_JOYITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 2), "Joy Stic&k"
          CASE %NEWFORM_XSPDCITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 2), "&XSPD Ctrl"
          CASE %NEWFORM_ANALITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 0), "&Analysis"
          CASE %NEWFORM_BSCANITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 3), "&B-Scan"
          CASE %NEWFORM_CSCANITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 3), "C-SCAN"
          CASE %NEWFORM_ASCANITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 3), "&A-SCAN"
          CASE %NEWFORM_3DVIEWITEM
               NEWFORM_MenuEvents CID&, CMsg&, CVal&, Cancel&, EZ_GetMenu("NEWFORM", 0), "3D &View"
          CASE ELSE
               NEWFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB NEWFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "AJOGFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_AJOGFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color -1, -1
     EZ_AllowLoadingEvent 2
     EZ_Form "AJOGFORM", FParent$, "A-JOG", 0, 0, 77, 34, "CZ"
END SUB

SUB EZ_AJOGFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_XPOSLAB1, 21.625, 2.25, 18, 1, "X POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_XPOSUPD1, 41.625, 2.25, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_SubClass 2
     EZ_ODButton %AJOGFORM_STOPBTN1, 22.625, 11.25, 33, 2, "Stop A-Jog", ""
     EZ_SubClass 0
     ' -----------------------------------------------
     EZ_Color 0, 34
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_Text %AJOGFORM_TEXT1, 1, 33, 1.125, .5625, "", "ET"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_YPOSLAB1, 21.625, 4.25, 18, 1, "Y POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_APOSLAB1, 21.625, 6.25, 18, 1, "A POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_ZPOSLAB1, 21.625, 8.25, 18, 1, "Z POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_YPOSUPD1, 41.625, 4.25, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_APOSUPD1, 41.625, 6.25, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %AJOGFORM_ZPOSUPD1, 41.625, 8.25, 13, 1, "", "C"
     ' -----------------------------------------------
END SUB


SUB EZ_AJOGFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               AJOGFORM_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %AJOGFORM_STOPBTN1
               AJOGFORM_STOPBTN1_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButton "AJOGFORM", %AJOGFORM_STOPBTN1, CVal&, 15, 9,  4
               END IF
          CASE  %AJOGFORM_TEXT1
               AJOGFORM_TEXT1_Events CID&, CMsg&, CVal&, Cancel&
          CASE ELSE
               AJOGFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB AJOGFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB

SUB AJOGFORM_STOPBTN1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE %EZ_LButtonDown
          CASE ELSE
     END SELECT
END SUB

SUB AJOGFORM_TEXT1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE %EZ_KeyDown
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "AUTOSFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_AUTOSFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color -1, -1
     EZ_AllowLoadingEvent 2
     EZ_Form "AUTOSFORM", FParent$, "Auto Scan", 0, 0, 74, 36, "CZ"
END SUB

SUB EZ_AUTOSFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_SubClass 2
     EZ_ODButton %AUTOSFORM_NEXTBTN, 22, 15, 33, 2, "Next", ""
     EZ_SubClass 0
     ' -----------------------------------------------
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_SubClass 2
     EZ_ODButton %AUTOSFORM_BEGBTN, 22, 11, 33, 2, "Begin", ""
     EZ_SubClass 0
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_XPOSLAB1, 21, 2, 18, 1, "X POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_YPOSLAB1, 21, 4, 18, 1, "Y POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_APOSLAB1, 21, 6, 18, 1, "A POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_ZPOSLAB1, 21, 8, 18, 1, "Z POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_YPOSUPD1, 41, 4, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_XPOSUPD1, 41, 2, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_APOSUPD1, 41, 6, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %AUTOSFORM_ZPOSUPD1, 41, 8, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_SubClass 2
     EZ_ODButton %AUTOSFORM_ALL0BTN, 22, 19, 33, 2, "ALL0", ""
     EZ_SubClass 0
     ' -----------------------------------------------
     EZ_Color 0, 34
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %AUTOSFORM_TEXT1, 3.375, 34.625, 1.125, .5625, "", "ET"
     ' -----------------------------------------------
END SUB


SUB EZ_AUTOSFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               AUTOSFORM_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_Started OR CMsg&=%EZ_Close THEN
                    AUTOSFORM_TimerEvents "AUTOSFORM", %AUTOSFORM_Timer_ID, CMsg&, CVal&, Cancel&
               END IF
          CASE %AUTOSFORM_Timer_ID
               AUTOSFORM_TimerEvents "AUTOSFORM", CID&, CMsg&, CVal&, Cancel&
          CASE  %AUTOSFORM_NEXTBTN
               AUTOSFORM_NEXTBTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButton "AUTOSFORM", %AUTOSFORM_NEXTBTN, CVal&, 15, 9,  4
               END IF
          CASE  %AUTOSFORM_BEGBTN
               AUTOSFORM_BEGBTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButton "AUTOSFORM", %AUTOSFORM_BEGBTN, CVal&, 15, 9,  4
               END IF
          CASE  %AUTOSFORM_YPOSUPD1
               AUTOSFORM_YPOSUPD1_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %AUTOSFORM_XPOSUPD1
               AUTOSFORM_XPOSUPD1_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %AUTOSFORM_APOSUPD1
               AUTOSFORM_APOSUPD1_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %AUTOSFORM_ZPOSUPD1
               AUTOSFORM_ZPOSUPD1_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %AUTOSFORM_ALL0BTN
               AUTOSFORM_ALL0BTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButton "AUTOSFORM", %AUTOSFORM_ALL0BTN, CVal&, 15, 9,  4
               END IF
          CASE  %AUTOSFORM_TEXT1
               AUTOSFORM_TEXT1_Events CID&, CMsg&, CVal&, Cancel&
          CASE ELSE
               AUTOSFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB AUTOSFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB

'  Put other Subs above this one !

SUB AUTOSFORM_TimerEvents(BYVAL FormName$, BYVAL CID&, BYVAL CMsg&, CVal&, Cancel&)
     LOCAL TM!
     SELECT CASE CMsg&
          CASE %EZ_Timer          ' Timer Event !
          CASE %EZ_Started        ' Start Timer !
               TM!=10.0            ' Timer delay in seconds
               EZ_StartTimer FormName$, CID&, TM!
          CASE %EZ_Close          ' Terminate Timer when form closes !
               EZ_StopTimer FormName$, CID&
          CASE ELSE
     END SELECT
END SUB
SUB AUTOSFORM_NEXTBTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE %EZ_LButtonDown
          CASE ELSE
     END SELECT
END SUB

SUB AUTOSFORM_BEGBTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE %EZ_LButtonDown
          CASE ELSE
     END SELECT
END SUB

SUB AUTOSFORM_YPOSUPD1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB

SUB AUTOSFORM_XPOSUPD1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB

SUB AUTOSFORM_APOSUPD1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB

SUB AUTOSFORM_ZPOSUPD1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB

SUB AUTOSFORM_ALL0BTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE %EZ_LButtonDown
          CASE ELSE
     END SELECT
END SUB

SUB AUTOSFORM_TEXT1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE %EZ_KeyDown
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "CALFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_CALFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color 0, 11
     EZ_Form "CALFORM", FParent$, "Calibrate Encoders", 0, 0, 64, 12, "CZ"
END SUB

SUB EZ_CALFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH-2"
     EZ_ODButton %CALFORM_CALXBTN, 4, 4, 15, 4, "Calibrate X Encoder", "T"
     EZ_SetRegion "CalForm", %CALFORM_CALXBTN,-2,0
     ' -----------------------------------------------
     EZ_Color 12, 15
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH-2"
     EZ_ODButton %CALFORM_CALYBTN, 24, 4, 15, 4, "Calibrate Y Encoder", "T"
     EZ_SetRegion "CalForm", %CALFORM_CALYBTN,-2,0
     ' -----------------------------------------------
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_UseAutoSize "VH-2"
     EZ_ODButton %CALFORM_CALABTN, 44, 4, 15, 4, "Calibrate A Encoder", "T"
     EZ_SetRegion "CalForm", %CALFORM_CALABTN,-2,0
     ' -----------------------------------------------
END SUB


SUB EZ_CALFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               CALFORM_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %CALFORM_CALXBTN
               CALFORM_CALXBTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButtonRR "CalForm", %CALFORM_CALXBTN, CVal&, 15, 9,  4
               END IF
          CASE  %CALFORM_CALYBTN
               CALFORM_CALYBTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButtonRR "CalForm", %CALFORM_CALYBTN, CVal&, 15, 12,  4
               END IF
          CASE  %CALFORM_CALABTN
               CALFORM_CALABTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButtonRR "CalForm", %CALFORM_CALABTN, CVal&, 15, 9,  4
               END IF
          CASE ELSE
               CALFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB CALFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB

SUB CALFORM_CALXBTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB

SUB CALFORM_CALYBTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB

SUB CALFORM_CALABTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "CALXFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_CALXFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color 0, 11
     EZ_AllowLoadingEvent 2
     EZ_Form "CALXFORM", FParent$, "Calibrate X Encoder", 0, 0, 83, 30, "CZ"
END SUB

SUB EZ_CALXFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %CALXFORM_XAXISLAB, 30, 2, 16, 1, "Move X Axis to Start", "C"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %CALXFORM_XPOSLAB, 30, 4, 16, 1, "Pos; Press Enter Key", "C"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %CALXFORM_XTEXTBOX, 50, 6, 10, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %CALXFORM_XPOSLAB_2, 30, 6, 16, 1, "X Pos:", "C"
     ' -----------------------------------------------
END SUB


SUB EZ_CALXFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               CALXFORM_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %CALXFORM_XTEXTBOX
               CALXFORM_XTEXTBOX_Events CID&, CMsg&, CVal&, Cancel&
          CASE ELSE
               CALXFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB CALXFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB

SUB CALXFORM_XTEXTBOX_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE %EZ_KeyDown
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "JOYFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_JOYFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color 0, 24
     EZ_AllowLoadingEvent 2
     EZ_Form "JOYFORM", FParent$, "Joy Stick", 0, 0, 75, 37, "CZ"
END SUB

SUB EZ_JOYFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_XPOSLAB, 20, 5, 18, 1, "X POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_YPOSLAB1, 20, 7, 18, 1, "Y POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_APOSLAB1, 20, 9, 18, 1, "A POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_ZPOSLAB1, 20, 11, 18, 1, "Z POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_YPOSUPD, 40, 7, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_XPOSUPD, 40, 5, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_APOSUPD, 40, 9, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %JOYFORM_ZPOSUPD, 40, 11, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_SubClass 2
     EZ_ODButton %JOYFORM_STOPBTN, 21, 14, 33, 2, "Stop Joy Stick", "T"
     EZ_SubClass 0
     ' -----------------------------------------------
END SUB


SUB EZ_JOYFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               JOYFORM_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_Started OR CMsg&=%EZ_Close THEN
                    JOYFORM_TimerEvents "JOYFORM", %JOYFORM_Timer_ID, CMsg&, CVal&, Cancel&
               END IF
          CASE %JOYFORM_Timer_ID
               JOYFORM_TimerEvents "JOYFORM", CID&, CMsg&, CVal&, Cancel&
          CASE  %JOYFORM_STOPBTN
               JOYFORM_STOPBTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButton "JOYFORM", %JOYFORM_STOPBTN, CVal&, 15, 9,  4
               END IF
          CASE ELSE
               JOYFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB JOYFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB

'  Put other Subs above this one !

SUB JOYFORM_TimerEvents(BYVAL FormName$, BYVAL CID&, BYVAL CMsg&, CVal&, Cancel&)
     LOCAL TM!
     SELECT CASE CMsg&
          CASE %EZ_Timer          ' Timer Event !
          CASE %EZ_Started        ' Start Timer !
               TM!=10.0            ' Timer delay in seconds
               EZ_StartTimer FormName$, CID&, TM!
          CASE %EZ_Close          ' Terminate Timer when form closes !
               EZ_StopTimer FormName$, CID&
          CASE ELSE
     END SELECT
END SUB
SUB JOYFORM_STOPBTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE %EZ_LButtonDown
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "MJOGFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_MJOGFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color -1, -1
     EZ_AllowLoadingEvent 2
     EZ_Form "MJOGFORM", FParent$, "M-Jog", 0, 0, 80, 45, "CZ"
END SUB

SUB EZ_MJOGFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_XPOSLAB1, 21, 2, 18, 1, "X POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_YPOSLAB1, 21, 4, 18, 1, "Y POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_APOSLAB1, 21, 6, 18, 1, "A POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 14
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_ZPOSLAB1, 21, 8, 18, 1, "Z POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_YPOSUPD1, 41, 4, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_XPOSUPD1, 41, 2, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_APOSUPD1, 41, 6, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %MJOGFORM_ZPOSUPD1, 41, 8, 13, 1, "", "C"
     ' -----------------------------------------------
     EZ_Color 9, 15
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_SubClass 2
     EZ_ODButton %MJOGFORM_STOPBTN1, 22, 11, 33, 2, "Stop M-Jog", ""
     EZ_SubClass 0
     ' -----------------------------------------------
     EZ_Color 0, 34
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_Text %MJOGFORM_TEXT1, 1, 33, 1.125, .5625, "", "ET"
     ' -----------------------------------------------
END SUB


SUB EZ_MJOGFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               MJOGFORM_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %MJOGFORM_STOPBTN1
               MJOGFORM_STOPBTN1_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButton "MJOGFORM", %MJOGFORM_STOPBTN1, CVal&, 15, 9,  4
               END IF
          CASE  %MJOGFORM_TEXT1
               MJOGFORM_TEXT1_Events CID&, CMsg&, CVal&, Cancel&
          CASE ELSE
               MJOGFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB MJOGFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB

SUB MJOGFORM_STOPBTN1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE %EZ_LButtonDown
          CASE ELSE
     END SELECT
END SUB

SUB MJOGFORM_TEXT1_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE %EZ_KeyDown
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "SETUPFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_SETUPFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color -1, -1
     EZ_AllowLoadingEvent 2
     EZ_Form "SETUPFORM", FParent$, "MCU Settings", 0, 0, 106, 46, "CRZ"
END SUB

SUB EZ_SETUPFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_SubClass 2
     EZ_Text %SETUPFORM_XSTART, 17, 2, 15, 1, "", "EST"
     EZ_SubClass 0
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXSTART, 2, 2, 12, 1, "X Start", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXEND, 2, 4, 12, 1, "X End", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYSTART, 2, 6, 12, 1, "Y Start", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYEND, 2, 8, 12, 1, "Y End", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXINDEX, 2, 10, 12, 1, "X Index", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYINDEX, 2, 12, 12, 1, "Y Index", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXSPEED, 2, 14, 12, 1, "X Speed", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYSPEED, 2, 16, 12, 1, "Y Speed", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXPOS, 34.375, 1.9375, 12, 1, "X POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYPOS, 34.375, 3.9375, 12, 1, "Y POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXCTIN, 34.375, 5.9375, 12, 1, "X CT/IN", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYCTIN, 34.375, 7.9375, 12, 1, "Y  CT/IN", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXPLUSMIN, 34.375, 9.9375, 12, 1, "X +/-", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYPLUSMIN, 34.375, 11.9375, 12, 1, "Y +/-", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELIDXHL, 34.375, 15.9375, 12, 1, "IDX H/L", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELXONOFF, 66.25, 2, 12, 1, "X ON/OFF", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELYONOFF, 66.25, 4, 12, 1, "Y ON/OFF", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELAUTOHD, 66.25, 6, 12, 1, "AUTO HD", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELDUALRAS, 66.25, 8, 12, 1, "DUALRAS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELOVERLAP, 66.25, 10, 12, 1, "OVERLAP", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELAPOS, 66.25, 12, 12, 1, "A POS", "C"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELACTIN, 66.25, 14, 12, 1, "A CT/IN", "C"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_XEND, 17, 4, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YSTART, 17, 6, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YEND, 17, 8, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_XINDEX, 17, 9.875, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YINDEX, 17, 11.875, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_XSPEED, 17, 13.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YSPEED, 17, 15.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_XPOS, 48.375, 1.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YPOS, 48.375, 3.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_XCTIN, 48.375, 5.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YCTIN, 48.375, 7.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_XPLUSMIN, 48.375, 9.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YPLUSMIN, 48.375, 11.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_INDEX, 48.375, 14, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_IDXHL, 48.375, 15.9375, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_XONOFF, 80.25, 2, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_YONOFF, 80.25, 4, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_AUTOHD, 80.25, 6, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_DUALRAS, 80.25, 8, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_OVERLAP, 80.25, 10, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_APOS, 80.25, 12, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color-1,-1
     EZ_UseFont 4
     EZ_AllowLoadingEvent 2
     EZ_UseAutoSize "VH"
     EZ_Text %SETUPFORM_ACTIN, 80.25, 14, 15, 1, "", "EST"
     ' -----------------------------------------------
     EZ_Color 0, 11
     EZ_UseFont 4
     EZ_UseAutoSize "VH"
     EZ_Label %SETUPFORM_LABELINDEX, 34.375, 13.9375, 12, 1, "INDEX", "C"
     ' -----------------------------------------------
     EZ_Color 12, 15
     EZ_UseFont 4
     EZ_ODButton %SETUPFORM_CALBTN, 2, 19, 25, 6, "Calibrate Encoders", "T"
     EZ_SetRegion "SetupForm", %SETUPFORM_CALBTN,-2,0
     ' -----------------------------------------------
END SUB


SUB EZ_SETUPFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               SETUPFORM_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_Started OR CMsg&=%EZ_Close THEN
                    SETUPFORM_Thread1Events "SETUPFORM", %SETUPFORM_Thread1_ID, CMsg&, CVal&, Cancel&
               END IF
          CASE %SETUPFORM_Thread1_ID
               SETUPFORM_Thread1Events "SETUPFORM", CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XSTART
               SETUPFORM_XSTART_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XEND
               SETUPFORM_XEND_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YSTART
               SETUPFORM_YSTART_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YEND
               SETUPFORM_YEND_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XINDEX
               SETUPFORM_XINDEX_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YINDEX
               SETUPFORM_YINDEX_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XSPEED
               SETUPFORM_XSPEED_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YSPEED
               SETUPFORM_YSPEED_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XPOS
               SETUPFORM_XPOS_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YPOS
               SETUPFORM_YPOS_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XCTIN
               SETUPFORM_XCTIN_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YCTIN
               SETUPFORM_YCTIN_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XPLUSMIN
               SETUPFORM_XPLUSMIN_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YPLUSMIN
               SETUPFORM_YPLUSMIN_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_INDEX
               SETUPFORM_INDEX_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_IDXHL
               SETUPFORM_IDXHL_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_XONOFF
               SETUPFORM_XONOFF_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_YONOFF
               SETUPFORM_YONOFF_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_AUTOHD
               SETUPFORM_AUTOHD_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_DUALRAS
               SETUPFORM_DUALRAS_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_OVERLAP
               SETUPFORM_OVERLAP_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_APOS
               SETUPFORM_APOS_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_ACTIN
               SETUPFORM_ACTIN_Events CID&, CMsg&, CVal&, Cancel&
          CASE  %SETUPFORM_CALBTN
               SETUPFORM_CALBTN_Events CID&, CMsg&, CVal&, Cancel&
               IF CMsg&=%EZ_OwnerDraw THEN
                    EZ_Draw3DButtonRR "SetupForm", %SETUPFORM_CALBTN, CVal&, 15, 12,  4
               END IF
          CASE ELSE
               SETUPFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB SETUPFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB

'  Put other Subs above this one !

SUB SETUPFORM_Thread1Events(BYVAL FormName$, BYVAL CID&, BYVAL CMsg&, CVal&, Cancel&)
     LOCAL STM&
     SELECT CASE CMsg&
          CASE %EZ_ThreadCode     ' Non-GUI Thread Code
               ' Cancel&=0      ' prevents %EZ_Thread event
          CASE %EZ_Thread         ' GUI Thread Code
          CASE %EZ_Started        ' Start Thread !
               STM&=10             ' millisecond delay
               EZ_StartThread FormName$, CID&, STM&
          CASE %EZ_Close          ' Terminate Thread when form closes !
               EZ_CloseThread FormName$, CID&
          CASE ELSE
     END SELECT
END SUB
SUB SETUPFORM_XSTART_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE %EZ_KeyDown
          CASE %EZ_LButtonDown
          CASE %EZ_Loaded
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_XEND_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE %EZ_NoFocus
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YSTART_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YEND_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_XINDEX_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YINDEX_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_XSPEED_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YSPEED_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_XPOS_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YPOS_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_XCTIN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YCTIN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_XPLUSMIN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YPLUSMIN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_INDEX_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_IDXHL_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_XONOFF_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_YONOFF_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_AUTOHD_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_DUALRAS_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE %EZ_Loaded
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_OVERLAP_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_APOS_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_ACTIN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Change
          CASE ELSE
     END SELECT
END SUB

SUB SETUPFORM_CALBTN_Events( MyID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CMsg&
          CASE %EZ_Click
          CASE ELSE
     END SELECT
END SUB



'<<BEGINFORM>> "SPLASHFORM"


' ======================================
' [PROTECTED CODE]         Do NOT Edit !
' ======================================

SUB EZ_SPLASHFORM_Display(BYVAL FParent$)     ' (PROTECTED)
     EZ_Color -1, -1
     EZ_Form "SPLASHFORM", FParent$, "MCU 2015", 0, 0, 209, 54, "CST"
END SUB

SUB EZ_SPLASHFORM_Design()     ' (PROTECTED)
     LOCAL CText$
     EZ_Color-1,-1
     EZ_UseFont 4
     STATIC PN1$
     IF PN1$ = "" THEN PN1$ = EZ_LoadPicture("atcosplash.bmp")
     EZ_Picture %SPLASHFORM_PICTURE1, 6, 1, 224.75, 54.9375, PN1$, ""
     ' -----------------------------------------------
END SUB


SUB EZ_SPLASHFORM_ParseEvents(CID&, CMsg&, CVal&, Cancel&)     ' (PROTECTED)
     SELECT CASE CID&
          CASE %EZ_Window
               SPLASHFORM_Events CID&, CMsg&, CVal&, Cancel&
          CASE ELSE
               SPLASHFORM_Events CID&, CMsg&, CVal&, Cancel&
     END SELECT
END SUB

' ======================================
' [USER ACCESSABLE CODE]  You may Edit !
' ======================================

SUB SPLASHFORM_Events(CID&, CMsg&, CVal&, Cancel&)
     SELECT CASE CID&
          CASE %EZ_Window
               SELECT CASE CMsg&
                    CASE %EZ_Loading
                    CASE %EZ_Loaded
                    CASE %EZ_Started
                    CASE %EZ_Close
                    CASE ELSE
               END SELECT
          CASE ELSE
     END SELECT
END SUB



'<<END ALL FORMS>>    UnKnown Routines follow:
#IF %EZ_NOSKIPCODE
#ENDIF 'PARSE END
