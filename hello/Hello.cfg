/**************************************************************************/
/*                                                                        */
/*  File: DEMO.CFG                               Copyright (c) 1996,2015  */
/*  Version: 6.0                                 On Time Informatik GmbH  */
/*                                                                        */
/*                                                                        */
/*                                      On Time        /////////////----- */
/*                                    Informatik GmbH /////////////       */
/* --------------------------------------------------/////////////        */
/*                                  Real-Time and System Software         */
/*                                                                        */
/**************************************************************************/

// Configuration file for the On Time RTOS-32 demo programs and Microsoft C/C++.
//
// This configuration file can be used for most On Time RTOS-32 demos.
// It supports booting from disk or running under the Debug Monitor.
//
// If symbol BOOT is not defined, the program is built to run under the
// control of the Debug Monitor.
//
// This file does not define any hardware below address 1M as those resources
// may need to be shared with the Debug Monitor and are defined in file
// Demopc.cfg in the demo projects. Merely Region HighMem above address 1M
// is defined here.
//
// Example:
//
//   RTLoc -DBOOT Hello Demopc.cfg Demo.cfg


#ifndef TOTAL_RAM
 #define TOTAL_RAM  16M                      // Minimum amount of installed RAM (adjust as needed)
#endif


Region  HighMem  1M  TOTAL_RAM-1M  RAM  Assign // Extended memory


#ifndef BOOT
 Reserve Monitor                             // leave room for the Debug Monitor
#endif

Virtual VMem  1G                             // the program goes here
FillRAM VMem                                 // remap unused RAM

Locate  PageTable  PageTable  HighMem        // enable pageing
Locate  Header     Header     HighMem        // application header

Locate  Stack      Stack      VMem  64k      // 64k stack
Locate  Heap       Heap       VMem           // and the rest for the heap

Locate  NTSection  PEHeader   VMem->HighMem  // required by VC++ 8.0
Locate  NTSection  .textbss   VMem->HighMem  // required by VC++ 7.0 incremental linker
Locate  NTSection  .text      VMem->HighMem  // code section
Locate  NTSection  .rdata     VMem->HighMem  // read only data
Locate  NTSection  .data      VMem->HighMem  // read/write initialized data
Locate  NTSection  .data1     VMem->HighMem  // uninitialized data (Intel compiler)
Locate  NTSection  .bss       VMem->HighMem  // uninitialized data
Locate  NTSection  .tls       VMem->HighMem  // thread local data
Locate  NTSection  .00cfg     VMem->HighMem  // required by VS 2015

Locate  DecompCode  Expand    HighMem        // include decompression stuff
Locate  DecompData  ExBuffer  HighMem

Locate  Copy        PageTable HighMem        // compress everything
Align 4
Locate  Copy        PEHeader  HighMem
Locate  Copy        .text     HighMem
Locate  Copy        .rdata    HighMem
Locate  Copy        .data     HighMem
Locate  Copy        .data1    HighMem
Locate  Copy        .tls      HighMem
