/**************************************************************************/
/*                                                                        */
/*  File: MONITOR.CFG                            Copyright (c) 1996,2015  */
/*  Version: 6.0                                 On Time Informatik GmbH  */
/*                                                                        */
/*                                                                        */
/*                                      On Time        /////////////----- */
/*                                    Informatik GmbH /////////////       */
/* --------------------------------------------------/////////////        */
/*                                  Real-Time and System Software         */
/*                                                                        */
/**************************************************************************/

// Configuration file for the RTTarget-32 Debug Monitor.
//
// This configuration file supports the RTTarget-32 Debug Monitor built
// with various compilers and compiler versions and is thus more complex
// than most configuration files. Do not use this file as a template
// for application configurations.
//
// A number of symbols can be defined to control the locate process:
//
// MON_ROM         - Region name for the Monitor's code and header
// MON_RAM         - Region name for the Monitor's data and stack
// MON_PAGING      - set to FALSE/TRUE to disable/enable paging
// MON_CODE_IN_RAM - set to FALSE/TRUE to execute the code from ROM/RAM
// MON_STACK_SIZE  - Stack size for the Monitor
//
// Symbols not defined will default to:
//
// MON_ROM         LowMem
// MON_RAM         LowMem
// MON_PAGING      TRUE
// MON_CODE_IN_RAM TRUE
// MON_STACK_SIZE  1k

#ifndef MON_RAM
 #define MON_RAM LowMem
#endif

#ifndef MON_ROM
 #define MON_ROM LowMem
#endif

#ifndef MON_PAGING
 #define MON_PAGING TRUE
#endif

#ifndef MON_CODE_IN_RAM
 #define MON_CODE_IN_RAM TRUE
#endif

#ifndef MON_STACK_SIZE
 #define MON_STACK_SIZE 1k
#endif

#if MON_CODE_IN_RAM
 #define MON_CODE_REGION MON_RAM
#else
 #define MON_CODE_REGION MON_ROM
#endif

// Compression will be useful if code is in ram or we have paging

#if MON_CODE_IN_RAM || MON_PAGING
 #define COMPRESSION TRUE
#else
 #define COMPRESSION FALSE
#endif

// We have to figure out which compiler/linker generated this Monitor.

#ifsection CODE         // Borland TLINK32
 #define CODESEG 1
 #define DATASEG 2
#else
 #define CODESEG 0
 #define DATASEG 0

 #ifsection .text       // Visual C++ or ILINK32
  #define CODE .text
  #define DATA .data
 #elifsection BEGTEXT   // Watcom 10.5/10.6
  #define CODE BEGTEXT
  #define DATA DGROUP
 #elifsection AUTO      // Watcom 11.0
  #define CODE AUTO
  #define DATA DGROUP
 #endif

#endif

#if MON_PAGING
 Locate  PageTable  PageTable  MON_RAM                    // Enable paging
#endif

Locate  Section     CODE       MON_CODE_REGION  CODESEG   // Monitor's code section
Locate  Section     .rdata     MON_CODE_REGION  0  4      // Read only data section
Locate  Header      Header     MON_ROM  0  4              // Header
Locate  Section     DATA       MON_RAM  DATASEG           // Data section
Locate  Section     .data1     MON_RAM  0  4              // More data (Intel compiler)
Locate  Section     .bss       MON_RAM  0  4              // Another data section

Locate  Stack       Stack      MON_RAM  MON_STACK_SIZE  4 // Small stack, no heap

Align 4                                                   // Small alignment for discardable sections

#if COMPRESSION
 Locate DecompCode  Expand     MON_ROM
 Locate DecompData  ExBuffer   MON_RAM
#else
 Options -c-
#endif

#if MON_PAGING
 Locate Copy        PageTable  MON_ROM
#endif

#if MON_CODE_IN_RAM
 Locate Copy        CODE       MON_ROM
 Locate Copy        .rdata     MON_ROM
#endif

Locate  Copy        DATA       MON_ROM
Locate  Copy        .data1     MON_ROM

Options -b+   // we always need an RTB file

// Keep the command line short

CommandLine Monitor

// disable warnings we know to be bogus

IgnoreMsg "No heap"
IgnoreMsg "Copy of section PageTable larger than required"
